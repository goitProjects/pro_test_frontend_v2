{"version":3,"sources":["redux/operations/testOperations.js","redux/selectors/testSelector.js","components/questions/Questions.module.scss","components/pages/test/Test.module.scss","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/questions/Questions.js","components/pages/test/Test.js"],"names":["test","type","dispatch","a","_Request","getTestData","testData","_Success","data","_Error","answersListOperation","answers","addAnswersListRequest","addAnswersListSuccess","error","addAnswersListError","state","tests","getTestType","module","exports","_arrayLikeToArray","arr","len","length","i","arr2","Array","_toConsumableArray","isArray","iter","Symbol","iterator","Object","from","o","minLen","n","prototype","toString","call","slice","constructor","name","TypeError","Questions","selectedAnswer","addList","questionId","value","currentAnswer","answer","setState","prevState","filter","item","handleChange","target","checked","props","prevProps","this","question","map","answ","localStorage","setItem","JSON","stringify","currentNumber","className","styles","wrap","answersNumber","answersNumberFirst","answersList","questionTitle","formRadio","id","onChange","htmlFor","Component","mapDispatchToProps","connect","Test","questionNumber","handleFinishButtonClick","history","push","handleQuestionNumberIncrease","handleQuestionNumberDecrease","idx","container","testType","header","onClick","disabled","parse","getItem","href","sprite"],"mappings":"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","file":"static/js/5.ca292205.chunk.js","sourcesContent":["import {\n  _Request,\n  _Success,\n  _Error,\n  addAnswersListRequest,\n  addAnswersListSuccess,\n  addAnswersListError,\n} from \"../actions/testAction\";\nimport { getTestData } from \"../../servises/reqToApi\";\n\nconst test = (type) => async (dispatch) => {\n  dispatch(_Request());\n\n  try {\n    const testData = await getTestData(type);\n    dispatch(_Success({ data: testData.data, type }));\n  } catch (error) {\n    dispatch(_Error(error));\n  }\n};\n\nconst answersListOperation = (answers) => async (dispatch) => {\n  dispatch(addAnswersListRequest());\n\n  try {\n    dispatch(addAnswersListSuccess(answers));\n  } catch (error) {\n    dispatch(addAnswersListError(error));\n  }\n};\n\nexport { test, answersListOperation };\n","const getTestData = (state) => {\n  return state.tests.test;\n};\n\nconst getTestType = (state) => {\n  return state.tests.type;\n};\n\nexport { getTestData, getTestType };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"question\":\"Questions_question__iVUKz\",\"wrap\":\"Questions_wrap__dkD_G\",\"answersNumber\":\"Questions_answersNumber__3V843\",\"answersNumberFirst\":\"Questions_answersNumberFirst__HOV7T\",\"answersList\":\"Questions_answersList__2X9ha\",\"questionTitle\":\"Questions_questionTitle__2PJXc\",\"formRadio\":\"Questions_formRadio__iNUfV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Test_container__B6l3x\",\"button-section\":\"Test_button-section__35NWj\",\"header\":\"Test_header__2Ik5p\",\"finish-button\":\"Test_finish-button__3rN5c\",\"switch-button\":\"Test_switch-button__1XUcx\",\"switch-button__text\":\"Test_switch-button__text__2NIYj\",\"switch-button__svg\":\"Test_switch-button__svg__poP91\",\"rotate-arrow\":\"Test_rotate-arrow__3LWzC\",\"blacken-arrow\":\"Test_blacken-arrow__3Y1Dl\",\"blacken-text\":\"Test_blacken-text__1NTUK\"};","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { answersListOperation } from \"../../redux/operations/testOperations\";\nimport styles from \"./Questions.module.scss\";\n\nclass Questions extends Component {\n  state = {\n    selectedAnswer: null,\n    answers: [],\n  };\n\n  componentDidUpdate(prevProps) {\n    this.props.answersListOperation({ answers: this.state.answers });\n\n    if (this.props.question !== prevProps.question) {\n      this.setState({ selectedAnswer: null });\n      // eslint-disable-next-line\n      this.state.answers.map((answ) => {\n        if (this.props.questionId === answ.questionId) {\n          this.setState({ selectedAnswer: answ.answer });\n        }\n      });\n\n      localStorage.setItem(\"answers\", JSON.stringify(this.state.answers));\n    }\n  }\n\n  addList = (questionId, value) => {\n    const currentAnswer = {\n      questionId: questionId,\n      answer: value,\n    };\n\n    this.setState((prevState) => ({\n      answers: [\n        ...prevState.answers.filter((item) => item.questionId !== questionId),\n        currentAnswer,\n      ],\n    }));\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const { questionId } = this.props;\n\n    this.setState({ [name]: type === \"checkbox\" ? checked : value });\n\n    this.addList(questionId, value);\n  };\n\n  render() {\n    const { selectedAnswer } = this.state;\n    const { question, answers, currentNumber } = this.props;\n\n    return (\n      <div className={styles.question}>\n        <div className={styles.wrap}>\n          <p className={styles.answersNumber}>\n            <span className={styles.answersNumberFirst}>{currentNumber}</span> /\n            12\n          </p>\n          <section className={styles.answersList}>\n            <h2 className={styles.questionTitle}>{question}?</h2>\n            {answers.map((answer) => (\n              <div key={answer} className={styles.formRadio}>\n                <input\n                  id={answer}\n                  type=\"radio\"\n                  checked={selectedAnswer === answer}\n                  name=\"selectedAnswer\"\n                  value={answer}\n                  onChange={this.handleChange}\n                />\n                <label htmlFor={answer}>{answer}</label>\n              </div>\n            ))}\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  answersListOperation: answersListOperation,\n};\n\nexport default connect(null, mapDispatchToProps)(Questions);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Questions from \"../../questions/Questions\";\nimport sprite from \"../../../sprites/sprite.svg\";\nimport styles from \"./Test.module.scss\";\nimport {\n  getTestData,\n  getTestType,\n} from \"../../../redux/selectors/testSelector\";\n\nclass Test extends Component {\n  state = {\n    questionNumber: 0,\n  };\n\n  componentDidMount() {\n    localStorage.setItem(\"answers\", JSON.stringify([]));\n  }\n\n  handleFinishButtonClick = () => {\n    this.props.history.push(\"/results\");\n  };\n\n  handleQuestionNumberIncrease = () => {\n    this.setState((prevState) => ({\n      questionNumber: prevState.questionNumber + 1,\n    }));\n  };\n\n  handleQuestionNumberDecrease = () => {\n    this.setState((prevState) => ({\n      questionNumber: prevState.questionNumber - 1,\n    }));\n  };\n\n  render() {\n    const { testData } = this.props;\n    const { questionNumber: idx } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <section className={styles[\"button-section\"]}>\n          {this.props.testType && (\n            <h2 className={styles.header}>\n              <div>[ Testing </div>\n              <div>{this.props.testType}_ ]</div>\n            </h2>\n          )}\n          <button\n            className={styles[\"finish-button\"]}\n            onClick={this.handleFinishButtonClick}\n            disabled={\n              !JSON.parse(localStorage.getItem(\"answers\")) ||\n              JSON.parse(localStorage.getItem(\"answers\")).length <\n                testData.length - 2\n            }\n          >\n            {!!this.props.testType ? \"Finish test\" : \"Select question type\"}\n          </button>\n        </section>\n        {testData[idx] && (\n          <Questions\n            question={testData[idx].question}\n            questionId={testData[idx].questionId}\n            answers={testData[idx].answers}\n            currentNumber={idx + 1}\n          />\n        )}\n        <section className={styles[\"button-section\"]}>\n          <button\n            className={styles[\"switch-button\"]}\n            onClick={this.handleQuestionNumberDecrease}\n            disabled={idx === 0}\n          >\n            <svg\n              className={`${styles[\"switch-button__svg\"]} ${styles[\"rotate-arrow\"]}`}\n            >\n              <use href={sprite + \"#arrow\"}></use>\n            </svg>\n            <span className={styles[\"switch-button__text\"]}>\n              Previous question\n            </span>\n          </button>\n          <button\n            className={styles[\"switch-button\"]}\n            onClick={this.handleQuestionNumberIncrease}\n            disabled={idx === testData.length - 1}\n          >\n            <span\n              className={`${styles[\"switch-button__text\"]} ${styles[\"blacken-text\"]}`}\n            >\n              Next question\n            </span>\n            <svg\n              className={`${styles[\"switch-button__svg\"]} ${styles[\"blacken-arrow\"]}`}\n            >\n              <use href={sprite + \"#arrow\"}></use>\n            </svg>\n          </button>\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  testData: getTestData(state),\n  testType: getTestType(state),\n});\n\nexport default connect(mapStateToProps)(Test);\n"],"sourceRoot":""}