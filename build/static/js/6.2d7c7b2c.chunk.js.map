{"version":3,"sources":["redux/selectors/testSelector.js","components/questions/Questions.module.scss","components/pages/test/Test.module.scss","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/questions/Questions.js","redux/operations/testOperations.js","components/pages/test/Test.js"],"names":["getTests","state","tests","test","getTestType","type","getIsLoading","loading","getAnswers","answers","getCanSubmitAnswers","createSelector","length","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","unsupportedIterableToArray","TypeError","Questions","question","questionId","currentNumber","dispatch","useDispatch","checkedAnswers","useSelector","useState","checkedAnswer","setCheckedAnswer","handleChange","target","useEffect","addAnswer","answer","savedAnswer","find","console","log","className","styles","wrap","answersNumber","answersNumberFirst","answersList","questionTitle","map","idx","formRadio","id","checked","name","onChange","htmlFor","getTest","a","test_Request","getTestData","testData","test_Success","data","errorHandler","error","errAction","test_Error","cb","Test","history","match","testType","params","hasAnswers","isLoading","canSubmitAnswers","questionNum","setQuestionNum","curTest","curNum","handleChangeQuestionNum","e","action","currentTarget","dataset","prev","addTestType","Loader","container","header","onClick","disabled","data-action","href","sprite"],"mappings":"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","file":"static/js/6.2d7c7b2c.chunk.js","sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getTests = (state) => {\n  return state.tests.test;\n};\n\nconst getTestType = (state) => {\n  return state.tests.type;\n};\n\nconst getIsLoading = (state) => state.tests.loading;\nconst getAnswers = (state) => state.tests.answers;\n\nconst getCanSubmitAnswers = createSelector(\n  [getTests, getAnswers],\n  (tests, answers) => {\n    return tests.length === answers.length;\n  }\n);\n\nexport { getTests, getTestType, getIsLoading, getAnswers, getCanSubmitAnswers };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"question\":\"Questions_question__iVUKz\",\"wrap\":\"Questions_wrap__dkD_G\",\"answersNumber\":\"Questions_answersNumber__3V843\",\"answersNumberFirst\":\"Questions_answersNumberFirst__HOV7T\",\"answersList\":\"Questions_answersList__2X9ha\",\"questionTitle\":\"Questions_questionTitle__2PJXc\",\"formRadio\":\"Questions_formRadio__iNUfV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Test_container__B6l3x\",\"button-section\":\"Test_button-section__35NWj\",\"header\":\"Test_header__2Ik5p\",\"finish-button\":\"Test_finish-button__3rN5c\",\"switch-button\":\"Test_switch-button__1XUcx\",\"switch-button__text\":\"Test_switch-button__text__2NIYj\",\"switch-button__svg\":\"Test_switch-button__svg__poP91\",\"rotate-arrow\":\"Test_rotate-arrow__3LWzC\",\"blacken-arrow\":\"Test_blacken-arrow__3Y1Dl\",\"blacken-text\":\"Test_blacken-text__1NTUK\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addAnswer } from \"../../redux/actions/testAction\";\nimport { getAnswers } from \"../../redux/selectors/testSelector\";\nimport styles from \"./Questions.module.scss\";\n\nconst Questions = ({ question, questionId, currentNumber, answers }) => {\n  const dispatch = useDispatch();\n  const checkedAnswers = useSelector(getAnswers);\n  const [checkedAnswer, setCheckedAnswer] = useState(null);\n\n  const handleChange = ({ target }) => {\n    setCheckedAnswer(target.value);\n  };\n\n  useEffect(() => {\n    checkedAnswer && dispatch(addAnswer({ questionId, answer: checkedAnswer }));\n    // eslint-disable-next-line\n  }, [checkedAnswer]);\n\n  useEffect(() => {\n    const savedAnswer = checkedAnswers.find(\n      (answer) => answer.questionId === questionId\n    );\n    console.log(\"savedAnswer :>> \", savedAnswer);\n    setCheckedAnswer(savedAnswer ? savedAnswer.answer : null);\n    // eslint-disable-next-line\n  }, [questionId]);\n\n  return (\n    <div className={styles.question}>\n      <div className={styles.wrap}>\n        <p className={styles.answersNumber}>\n          <span className={styles.answersNumberFirst}>{currentNumber}</span> /\n          12\n        </p>\n        <section className={styles.answersList}>\n          <h2 className={styles.questionTitle}>{question}?</h2>\n          {answers.map((answer, idx) => (\n            <div key={idx} className={styles.formRadio}>\n              <input\n                id={idx}\n                type=\"radio\"\n                checked={answer === checkedAnswer}\n                name=\"selectedAnswer\"\n                value={answer}\n                onChange={handleChange}\n              />\n              <label htmlFor={idx}>{answer}</label>\n            </div>\n          ))}\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default Questions;\n","import { test_Request, test_Success, test_Error } from \"../actions/testAction\";\nimport { getTestData } from \"../../servises/reqToApi\";\nimport { errorHandler } from \"./errorHandlerOperation\";\n\nconst getTest = (type) => async (dispatch) => {\n  dispatch(test_Request());\n\n  try {\n    const testData = await getTestData(type);\n    dispatch(test_Success({ data: testData, type }));\n  } catch (error) {\n    dispatch(\n      errorHandler({\n        error,\n        errAction: test_Error,\n        cb: () => getTest(type),\n      })\n    );\n  }\n};\n\nexport { getTest };\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Questions from \"../../questions/Questions\";\nimport Loader from \"../../loader/Loader\";\nimport sprite from \"../../../sprites/sprite.svg\";\nimport styles from \"./Test.module.scss\";\nimport {\n  getAnswers,\n  getIsLoading,\n  getTests,\n  getCanSubmitAnswers,\n} from \"../../../redux/selectors/testSelector\";\nimport { getTest } from \"../../../redux/operations/testOperations\";\nimport { addTestType } from \"../../../redux/actions/testAction\";\n\nconst Test = ({ history, match }) => {\n  const dispatch = useDispatch();\n  const {\n    params: { testType },\n  } = match;\n\n  const testData = useSelector(getTests);\n  const hasAnswers = !!useSelector(getAnswers).length;\n  const isLoading = useSelector(getIsLoading);\n  const canSubmitAnswers = useSelector(getCanSubmitAnswers);\n\n  const [questionNum, setQuestionNum] = useState(0);\n\n  const curTest = testData[questionNum];\n  const curNum = questionNum + 1;\n\n  const handleFinishButtonClick = () => {\n    history.push(\"/results\");\n  };\n\n  const handleChangeQuestionNum = (e) => {\n    const { action } = e.currentTarget.dataset;\n    setQuestionNum((prev) => (action === \"increase\" ? prev + 1 : prev - 1));\n  };\n\n  useEffect(() => {\n    !hasAnswers && dispatch(getTest(testType));\n    dispatch(addTestType(testType));\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <div className={styles.container}>\n        <section className={styles[\"button-section\"]}>\n          {testType && (\n            <h2 className={styles.header}>\n              <div>[ Testing </div>\n              <div>{testType}_ ]</div>\n            </h2>\n          )}\n          <button\n            className={styles[\"finish-button\"]}\n            onClick={handleFinishButtonClick}\n            disabled={!canSubmitAnswers}\n          >\n            {!!testType ? \"Finish test\" : \"Select question type\"}\n          </button>\n        </section>\n        {curTest && <Questions currentNumber={curNum} {...curTest} />}\n        <section className={styles[\"button-section\"]}>\n          <button\n            className={styles[\"switch-button\"]}\n            onClick={handleChangeQuestionNum}\n            disabled={questionNum === 0}\n            data-action=\"decrease\"\n          >\n            <svg\n              className={`${styles[\"switch-button__svg\"]} ${styles[\"rotate-arrow\"]}`}\n            >\n              <use href={sprite + \"#arrow\"}></use>\n            </svg>\n            <span className={styles[\"switch-button__text\"]}>\n              Previous question\n            </span>\n          </button>\n          <button\n            className={styles[\"switch-button\"]}\n            onClick={handleChangeQuestionNum}\n            disabled={questionNum === testData.length - 1}\n            data-action=\"increase\"\n          >\n            <span\n              className={`${styles[\"switch-button__text\"]} ${styles[\"blacken-text\"]}`}\n            >\n              Next question\n            </span>\n            <svg\n              className={`${styles[\"switch-button__svg\"]} ${styles[\"blacken-arrow\"]}`}\n            >\n              <use href={sprite + \"#arrow\"}></use>\n            </svg>\n          </button>\n        </section>\n      </div>\n    </>\n  );\n};\n\nexport default Test;\n"],"sourceRoot":""}