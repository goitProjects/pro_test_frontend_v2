{"version":3,"sources":["components/authForm/modalErrorMessage/ModalErrorMessage.module.scss","components/authForm/AuthForm.module.scss","components/authForm/modalAnimation.module.scss","components/pages/authPage/AuthPage.module.scss","redux/selectors/authSelector.js","components/authForm/modalErrorMessage/ModalErrorMessage.js","components/authForm/AuthForm.js","components/pages/authPage/AuthPage.js"],"names":["module","exports","getAuthError","state","auth","error","ModalErrorMessage","className","s","container","AuthForm","email","password","isModal","onHandleChange","e","target","name","value","setState","onHandleSubmit","a","preventDefault","nativeEvent","submitter","dataset","action","props","onLogin","onRegister","timeoutId","setTimeout","onToggleModal","onHandleSigIn","window","location","replace","clearTimeout","this","CSSTransition","in","classNames","styles","timeout","unmountOnExit","desc","onClick","googleButton","form","onSubmit","type","input","placeholder","required","onChange","buttonContainer","button","data-action","Component","mapDispatchToProps","register","logIn","connect","AuthPage","inner","box","header","content","contentAccent"],"mappings":"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","file":"static/js/4.bdf303f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ModalErrorMessage_container__1-nel\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AuthForm_container__1xBVX\",\"desc\":\"AuthForm_desc__3eLKn\",\"googleButton\":\"AuthForm_googleButton__3jDXc\",\"form\":\"AuthForm_form__3UO1a\",\"input\":\"AuthForm_input__1CzQO\",\"buttonContainer\":\"AuthForm_buttonContainer__3ZyOK\",\"button\":\"AuthForm_button__3HtB7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"modalAnimation_enter__ELlc_\",\"enterActive\":\"modalAnimation_enterActive__2mqhH\",\"exit\":\"modalAnimation_exit__2dw_o\",\"exitActive\":\"modalAnimation_exitActive__2M3EC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AuthPage_container__11JmH\",\"box\":\"AuthPage_box__JzxRT\",\"header\":\"AuthPage_header__2RPJ3\",\"content\":\"AuthPage_content__qFNm6\",\"contentAccent\":\"AuthPage_contentAccent__2WQf-\",\"inner\":\"AuthPage_inner__ABAeK\"};","const getAuthError = (state) => {\n  return state.auth.error;\n};\n\nexport { getAuthError };\n","import s from \"./ModalErrorMessage.module.scss\";\n\nconst ModalErrorMessage = () => {\n  return (\n    <div className={s.container}>\n      <h3>WARNING</h3>\n      <p>Please make sure you're using a correct data</p>\n    </div>\n  );\n};\n\nexport default ModalErrorMessage;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { register, logIn } from \"../../redux/operations/authOperations\";\nimport { getAuthError } from \"../../redux/selectors/authSelector\";\nimport ModalErrorMessage from \"./modalErrorMessage/ModalErrorMessage\";\nimport s from \"./AuthForm.module.scss\";\nimport styles from \"./modalAnimation.module.scss\";\n\nclass AuthForm extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    isModal: false,\n  };\n\n  componentWillUnmount() {\n    clearTimeout(this.timeoutId);\n    this.setState({ email: \"\", password: \"\", isModal: false });\n  }\n\n  onHandleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  onHandleSubmit = async (e) => {\n    e.preventDefault();\n    const target = e.nativeEvent.submitter.dataset.action;\n\n    if (target === \"login\") {\n      await this.props.onLogin({\n        email: this.state.email,\n        password: this.state.password,\n      });\n    } else {\n      await this.props.onRegister({\n        email: this.state.email,\n        password: this.state.password,\n      });\n      await this.props.onLogin({\n        email: this.state.email,\n        password: this.state.password,\n      });\n    }\n\n    if (!!this.props.error) {\n      this.setState({ isModal: true });\n      this.timeoutId = setTimeout(this.onToggleModal, 3000);\n    }\n  };\n\n  onHandleSigIn = async () => {\n    window.location.replace(\"https://protest-backend.goit.global/auth/google\");\n  };\n\n  onToggleModal = () => {\n    this.setState({ isModal: false });\n  };\n\n  render() {\n    const { email, password, isModal } = this.state;\n    const { error } = this.props;\n    return (\n      <div className={s.container}>\n        <CSSTransition\n          in={!!error && isModal}\n          classNames={styles}\n          timeout={500}\n          unmountOnExit\n        >\n          <ModalErrorMessage />\n        </CSSTransition>\n        <p className={s.desc}>You can use your Google Account to authorize:</p>\n\n        <button onClick={this.onHandleSigIn} className={s.googleButton}>\n          Google\n        </button>\n        <p className={s.desc}>Or login to our app using e-mail and password:</p>\n\n        <form className={s.form} onSubmit={this.onHandleSubmit}>\n          <input\n            type=\"email\"\n            className={s.input}\n            name=\"email\"\n            value={email}\n            placeholder=\"E-mail\"\n            required\n            onChange={this.onHandleChange}\n          />\n          <input\n            type=\"password\"\n            className={s.input}\n            name=\"password\"\n            value={password}\n            placeholder=\"Password\"\n            required\n            onChange={this.onHandleChange}\n          />\n          <div className={s.buttonContainer}>\n            <button type=\"submit\" className={s.button} data-action=\"login\">\n              Sign in\n            </button>\n            <button type=\"submit\" className={s.button} data-action=\"signup\">\n              Sign up\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  error: getAuthError(state),\n});\n\nconst mapDispatchToProps = {\n  onRegister: register,\n  onLogin: logIn,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);\n","import React from \"react\";\nimport AuthForm from \"../../authForm/AuthForm\";\nimport s from \"./AuthPage.module.scss\";\n\nconst AuthPage = () => {\n  return (\n    <div className={s.container}>\n      <div className={s.inner}>\n        <div className={s.box}>\n          <h2 className={s.header}>Pro Test</h2>\n          <p className={s.content}>\n            <strong>[</strong> We will help you find weak points in knowledge so\n            that you can strengthen it. We will show you what is relevant to\n            know for a <span className={s.contentAccent}>QA Engineer</span> and\n            will try to make the learning process more diverse_{\" \"}\n            <strong>]</strong>\n          </p>\n        </div>\n        <AuthForm />\n      </div>\n    </div>\n  );\n};\n\nexport default AuthPage;\n"],"sourceRoot":""}